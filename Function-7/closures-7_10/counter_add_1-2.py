'''
# 1
Используя замыкания функций, определите вложенную функцию, которая бы увеличивала значение
переданного параметра на 5 и возвращала бы вычисленный результат. При этом внешняя функция
должна иметь следующую сигнатуру:

def counter_add(): ...

Вызовите функцию counter_add и результат ее работы присвойте переменной с именем cnt.
Вызовите внутреннюю функцию через переменную cnt со значением k, введенным с клавиатуры:

k = int(input())
'''

# def counter_add():
#     def inner(count):
#         return count + 5
#     return inner
#
#
# if __name__ == '__main__':
#     k = int(input())
#     cnt = counter_add()
#     print(cnt(k))



'''
# 2
Используя замыкания функций, объявите внутреннюю функцию, которая увеличивает значение своего 
аргумента на некоторую величину n - параметр внешней функции с сигнатурой:

def counter_add(n): ...

Вызовите внешнюю функцию counter_add со значением аргумента 2 и результат присвойте 
переменной cnt. Вызовите внутреннюю функцию через переменную cnt со значением k, 
введенным с клавиатуры:

k = int(input())
'''

def counter_add(n):
    def inner(count):
        nonlocal n
        return count + n
    return inner

if __name__ == '__main__':
    k = int(input())
    cnt = counter_add(2)
    print(cnt(k))


